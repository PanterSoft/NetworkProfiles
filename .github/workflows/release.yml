name: Create Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag to release'
        required: true
        default: 'v1.0.0'
      comment:
        description: 'Release comment'
        required: false
        default: ''
  release:
    types:
      - created

jobs:
  release:
    runs-on: macos-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set Git identity
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1.6.0
        with:
          xcode-version: latest

      - name: Create DMG file
        uses: L-Super/create-dmg-actions@v1.0.3
        with:
          dmg_name: 'NetworkProfilesInstaller'
          src_dir: 'DerivedData/NetworkProfiles/Build/Intermediates.noindex/ArchiveIntermediates/NetworkProfiles/BuildProductsPath/Release/NetworkProfiles.app'

      - name: Upload DMG
        uses: actions/upload-artifact@v3
        with:
          name: NetworkProfiles.dmg
          path: dmg/NetworkProfiles.dmg

      - name: Create tar.gz of source code
        run: |
          tar -czvf NetworkProfiles-${{ github.event.inputs.tag }}.tar.gz build/NetworkProfiles.app

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.event.inputs.tag }}
          release_name: Release ${{ github.event.inputs.tag }}
          body: ${{ github.event.inputs.comment }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./NetworkProfiles-${{ github.event.inputs.tag }}.tar.gz
          asset_name: NetworkProfiles-${{ github.event.inputs.tag }}.tar.gz
          asset_content_type: application/gzip

  deploy-to-homebrew:
    runs-on: ubuntu-20.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get latest tag version
        id: latest_tag
        uses: "WyriHaximus/github-action-get-previous-tag@v1"

      - name: Get sha 256 of macOS version
        id: shasum_mac_os
        run: |
          wget https://github.com/PanterSoft/NetworkProfiles/releases/download/${{ steps.latest_tag.outputs.tag }}/NetworkProfiles-${{ steps.latest_tag.outputs.tag }}.tar.gz &&
          echo ::set-output name=sha::"$(shasum -a 256 ./NetworkProfiles-${{ steps.latest_tag.outputs.tag }}.tar.gz | awk '{printf $1}')"

      - name: Verify Homebrew Token
        run: |
          if [ -z "${{ secrets.BREW_TOKEN_TAP }}" ]; then
            echo "BREW_TOKEN_TAP is not set"
            exit 1
          fi

      - name: Update NetworkProfiles homebrew formula
        uses: naijabx/update-formula-homebrew-action@v1.1
        with:
          repo: PanterSoft/NetworkProfiles
          tap: PanterSoft/homebrew-pantersoft
          formula: Formula/NetworkProfiles.rb
          download-url: https://github.com/PanterSoft/NetworkProfiles/releases/download/${{ steps.latest_tag.outputs.tag }}/NetworkProfiles-${{ steps.latest_tag.outputs.tag }}.tar.gz
          sha256: ${{ steps.shasum_mac_os.outputs.sha }}
        env:
          COMMIT_TOKEN: ${{ secrets.BREW_TOKEN_TAP }}